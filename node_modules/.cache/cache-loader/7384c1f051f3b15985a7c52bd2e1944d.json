{"remainingRequest":"/Users/uma/Documents/ActivitySensing/project/asr/ASR/node_modules/babel-loader/lib/index.js??ref--11-1!/Users/uma/Documents/ActivitySensing/project/asr/ASR/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/Users/uma/Documents/ActivitySensing/project/asr/ASR/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/Users/uma/Documents/ActivitySensing/project/asr/ASR/docs/doc6.md","dependencies":[{"path":"/Users/uma/Documents/ActivitySensing/project/asr/ASR/docs/doc6.md","mtime":1607297259346},{"path":"/Users/uma/Documents/ActivitySensing/project/asr/ASR/.docusaurus/docusaurus-plugin-content-docs/default/site-docs-doc-6-md-03d.json","mtime":1607382484283},{"path":"/Users/uma/Documents/ActivitySensing/project/asr/ASR/node_modules/cache-loader/dist/cjs.js","mtime":1601567416106},{"path":"/Users/uma/Documents/ActivitySensing/project/asr/ASR/node_modules/babel-loader/lib/index.js","mtime":1606517689043},{"path":"/Users/uma/Documents/ActivitySensing/project/asr/ASR/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1606517692821},{"path":"/Users/uma/Documents/ActivitySensing/project/asr/ASR/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1606517692420}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL3VtYS9Eb2N1bWVudHMvQWN0aXZpdHlTZW5zaW5nL3Byb2plY3QvYXNyL0FTUi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyI7aW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JztleHBvcnQgY29uc3QgZnJvbnRNYXR0ZXI9e2lkOidkb2M2Jyx0aXRsZTonQWN0aXZpdHkgRXhwbG9yYXRpb24nLHNpZGViYXJfbGFiZWw6J0V4cGxvcmF0b3J5IGFuYWx5c2lzJyxjdXN0b21fZWRpdF91cmw6bnVsbH07ZXhwb3J0IGNvbnN0IG1ldGFkYXRhPXsidW52ZXJzaW9uZWRJZCI6ImRvYzYiLCJpZCI6ImRvYzYiLCJpc0RvY3NIb21lUGFnZSI6ZmFsc2UsInRpdGxlIjoiQWN0aXZpdHkgRXhwbG9yYXRpb24iLCJkZXNjcmlwdGlvbiI6IldlIHBlcmZvcm1lZCBhbiBpbml0aWFsIGV4cGxvcmF0aW9uIGZyb20gdGhlIGRhdGEgY29sbGVjdGVkLCB0aGUgZGF0YXNldCBoYXMgdGhlIGFjY2VsZXJvbWV0ZXIgeCx5IGFuZCB6IHNpZ25hbHMgZnJvbSB3aGljaCB3ZSBjb21wdXRlZCB0aGUgbWFnbml0dWRlIG9mIHRoZSByYXcgYWNjZWxlcm9tZXRlciBzaWduYWxzIGFuZCBwZXJmb3JtZWQgdGhpcyBleHBsb3JhdG9yeSBhbmFseXNpcy4iLCJzb3VyY2UiOiJAc2l0ZS9kb2NzL2RvYzYubWQiLCJzbHVnIjoiL2RvYzYiLCJwZXJtYWxpbmsiOiIvQVNSL2RvY3MvZG9jNiIsImVkaXRVcmwiOm51bGwsInZlcnNpb24iOiJjdXJyZW50Iiwic2lkZWJhcl9sYWJlbCI6IkV4cGxvcmF0b3J5IGFuYWx5c2lzIiwic2lkZWJhciI6InNvbWVTaWRlYmFyIiwicHJldmlvdXMiOnsidGl0bGUiOiJEYXRhc2V0IENvbGxlY3Rpb24iLCJwZXJtYWxpbmsiOiIvQVNSL2RvY3MvZG9jNSJ9LCJuZXh0Ijp7InRpdGxlIjoiTWV0aG9kcyIsInBlcm1hbGluayI6Ii9BU1IvZG9jcy9kb2M3In19Oy8qIEBqc3hSdW50aW1lIGNsYXNzaWMgKi8gLyogQGpzeCBtZHggKi9leHBvcnQgY29uc3QgcmlnaHRUb2M9W3t2YWx1ZTonU2Vuc29yIHBsYWNlbWVudCAxIDogUGhvbmUgaW4gaGFuZCcsaWQ6J3NlbnNvci1wbGFjZW1lbnQtMS0tcGhvbmUtaW4taGFuZCcsY2hpbGRyZW46W119LHt2YWx1ZTonU2Vuc29yIHBsYWNlbWVudCAyIDogUGhvbmUgaW4gcG9ja2V0JyxpZDonc2Vuc29yLXBsYWNlbWVudC0yLS1waG9uZS1pbi1wb2NrZXQnLGNoaWxkcmVuOltdfV07Y29uc3QgbGF5b3V0UHJvcHM9e3JpZ2h0VG9jfTtjb25zdCBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoe2NvbXBvbmVudHMsLi4ucHJvcHN9KXtyZXR1cm4gbWR4KE1EWExheW91dCxfZXh0ZW5kcyh7fSxsYXlvdXRQcm9wcyxwcm9wcyx7Y29tcG9uZW50czpjb21wb25lbnRzLG1keFR5cGU6Ik1EWExheW91dCJ9KSxtZHgoInAiLG51bGwsYFdlIHBlcmZvcm1lZCBhbiBpbml0aWFsIGV4cGxvcmF0aW9uIGZyb20gdGhlIGRhdGEgY29sbGVjdGVkLCB0aGUgZGF0YXNldCBoYXMgdGhlIGFjY2VsZXJvbWV0ZXIgeCx5IGFuZCB6IHNpZ25hbHMgZnJvbSB3aGljaCB3ZSBjb21wdXRlZCB0aGUgbWFnbml0dWRlIG9mIHRoZSByYXcgYWNjZWxlcm9tZXRlciBzaWduYWxzIGFuZCBwZXJmb3JtZWQgdGhpcyBleHBsb3JhdG9yeSBhbmFseXNpcy5gKSxtZHgoInAiLG51bGwsbWR4KCJpbWciLHthbHQ6ImltZyIsc3JjOnJlcXVpcmUoIiF1cmwtbG9hZGVyP2xpbWl0PTEwMDAwJm5hbWU9YXNzZXRzL2ltYWdlcy9bbmFtZV0tW2hhc2hdLltleHRdJmZhbGxiYWNrPWZpbGUtbG9hZGVyIS4vLi4vc3RhdGljL2ltZy9lcW4ucG5nIikuZGVmYXVsdH0pKSxtZHgoInAiLG51bGwsYEZpcnN0LCB3ZSBsb29rIGF0IHRoZSBtYWduaXR1ZGUgb2Ygc29tZSBvZiB0aGUgYWN0aXZpdGllcyBhY3Jvc3MgdGhlIHN1YmplY3RzLiBXZSBjb25zaWRlciB0aHJlZSBhY3Rpdml0aWVzIHJhbmRvbWx5IHNlbGVjdGVkIGF0IHR3byBkaWZmZXJlbnQgc2Vuc29yIHBsYWNlbWVudHMsIHdlIHBsb3QgdGhlIG1hZ25pdHVkZSBhcyB3ZWxsIGFzIGNvcnJlbGF0aW9uIGJldHdlZW4gdGhlIG1hZ25pdHVkZSBvZiBhY2NlbGVyb21ldGVyIHNpZ25hbHMgYWNyb3NzIHN1YmplY3RzLmApLG1keCgiaDMiLHsiaWQiOiJzZW5zb3ItcGxhY2VtZW50LTEtLXBob25lLWluLWhhbmQifSxgU2Vuc29yIHBsYWNlbWVudCAxIDogUGhvbmUgaW4gaGFuZGApLG1keCgicCIsbnVsbCxgVGhlIHBsb3RzIGJlbG93IHNob3cgd2Fsa2luZyBhY3Rpdml0eSwgZm9yIHRoZSA3IHN1YmplY3RzLiBXZSBjYW4gc2VlIHRoYXQgYWN0aXZpdHkgbGlrZSB3YWxraW5nIHZhcmllcyBiYXNlZCBvbiBob3cgZWFjaCBpbmRpdmlkdWFsIHN1YmplY3Qgd2Fsa3MsIGVpdGhlciBmYXN0IG9yIHNsb3cuIEluIGFkZGl0aW9uIHRvIHRoaXMgaXQgYWxzbyB2YXJpZXMgd2l0aCB3aGljaCBoYW5kIG9yIHRoZSBwb3NpdGlvbiBpbiB3aGljaCB0aGV5IGhlbGQgdGhlaXIgcGhvbmUgd2hpbGUgcmVjb3JkaW5nIHRoZSBkYXRhLiBUaGVyZSBpcyB2ZXJ5IGxpdHRsZSBjb3JyZWxhdGlvbiBiZXR3ZWVuIHRoZSBzaWduYWxzIGFzIHNob3duIGluIHRoZSBoZWF0IG1hcCwgd2hpY2ggaW5kaWNhdGVzIHRoYXQgdGhlIHdhbGtpbmcgcGF0dGVybiBvZiBlYWNoIGluZGl2aWR1YWwgY2FuIGRpZmZlcmVudC5gKSxtZHgoInAiLG51bGwsbWR4KCJpbWciLHthbHQ6ImltZyIsc3JjOnJlcXVpcmUoIiF1cmwtbG9hZGVyP2xpbWl0PTEwMDAwJm5hbWU9YXNzZXRzL2ltYWdlcy9bbmFtZV0tW2hhc2hdLltleHRdJmZhbGxiYWNrPWZpbGUtbG9hZGVyIS4vLi4vc3RhdGljL2ltZy8xLnBuZyIpLmRlZmF1bHR9KSksbWR4KCJwIixudWxsLGBOZXh0IHdlIHBsb3QgdGhlIHNsZWVwaW5nIGFuZCBzaXR0aW5nIHBvc2l0aW9uIGFjdGl2aXR5LCBoZXJlIHdlIGNhbiBzZWUgYSBtaW5vciBwYXR0ZXJuIGVtZXJnaW5nIHRoaXMgY2FuIGJlIGR1ZSB0byB0aGUgZmFjdCB0aGF0IGxpdHRsZSBtb3ZlbWVudCBpcyBvYnNlcnZlZCB3aGlsZSByZWNvcmRpbmcgc2l0dGluZyBhY3Rpdml0eS4gVGhpcyBhbHNvIGltcGxpZXMgdGhhdCBzaXR0aW5nIGFuZCBzbGVlcGluZyBjb3VsZCBiZSBnZW5lcmFsaXplZCBiZXR0ZXIgY29tcGFyZWQgdG8gb3RoZXIgYWN0aXZpdGllcy4gVGhlIGNvcnJlbGF0aW9uIHBsb3QgYWxzbyByZWZsZWN0cyB0aGlzLCB3aXRoIGhpZ2ggY29ycmVsYXRpb24gYWNyb3NzIHN1YmplY3RzIGZvciBzaXR0aW5nIGFuZCBzbGVlcGluZyBhY3Rpdml0aWVzLmApLG1keCgicCIsbnVsbCxtZHgoImltZyIse2FsdDoiaW1nIixzcmM6cmVxdWlyZSgiIXVybC1sb2FkZXI/bGltaXQ9MTAwMDAmbmFtZT1hc3NldHMvaW1hZ2VzL1tuYW1lXS1baGFzaF0uW2V4dF0mZmFsbGJhY2s9ZmlsZS1sb2FkZXIhLi8uLi9zdGF0aWMvaW1nLzIucG5nIikuZGVmYXVsdH0pKSxtZHgoInAiLG51bGwsbWR4KCJpbWciLHthbHQ6ImltZyIsc3JjOnJlcXVpcmUoIiF1cmwtbG9hZGVyP2xpbWl0PTEwMDAwJm5hbWU9YXNzZXRzL2ltYWdlcy9bbmFtZV0tW2hhc2hdLltleHRdJmZhbGxiYWNrPWZpbGUtbG9hZGVyIS4vLi4vc3RhdGljL2ltZy8zLnBuZyIpLmRlZmF1bHR9KSksbWR4KCJoMyIseyJpZCI6InNlbnNvci1wbGFjZW1lbnQtMi0tcGhvbmUtaW4tcG9ja2V0In0sYFNlbnNvciBwbGFjZW1lbnQgMiA6IFBob25lIGluIHBvY2tldGApLG1keCgicCIsbnVsbCxgU2ltaWxhciB0byB0aGUgcHJldmlvdXMgZXhwbG9yYXRpb24sIHdlIHBsb3QgdGhlIG1hZ25pdHVkZSBmb3IgdGhlIG1vYmlsZSBwaG9uZSBwbGFjZWQgaW4gdGhlIHN1YmplY3TigJlzIHBvY2tldC4gV2UgZmluZCBzaW1pbGFyIG9ic2VydmF0aW9ucywgZm9yIHNpdHRpbmcgYW5kIHNsZWVwaW5nIGFjdGl2aXR5IHRoZXJlIGlzIGEgY29ycmVsYXRpb24gYmV0d2VlbiB0aGUgc3ViamVjdHMgaW5kaWNhdGluZyB0aGF0IHNlbnNvciBwbGFjZW1lbnQgZG9lcyBub3QgbWF0dGVyIGhlcmUgYmVjYXVzZSB0aGVyZSBpcyBub3QgbXVjaCBtb3ZlbWVudCBmcm9tIHRoZSBzdWJqZWN0cy4gSG93ZXZlciB3aGVuIHdlIGxvb2sgYXQgdGhlIGpvZ2dpbmcgYWN0aXZpdHkgd2UgZmluZCB2ZXJ5IGxpdHRsZSBjb3JyZWxhdGlvbiBpbiB0aGUgc2lnbmFscyBhY3Jvc3Mgc3ViamVjdHMuYCksbWR4KCJwIixudWxsLG1keCgiaW1nIix7YWx0OiJpbWciLHNyYzpyZXF1aXJlKCIhdXJsLWxvYWRlcj9saW1pdD0xMDAwMCZuYW1lPWFzc2V0cy9pbWFnZXMvW25hbWVdLVtoYXNoXS5bZXh0XSZmYWxsYmFjaz1maWxlLWxvYWRlciEuLy4uL3N0YXRpYy9pbWcvNC5wbmciKS5kZWZhdWx0fSkpLG1keCgicCIsbnVsbCxtZHgoImltZyIse2FsdDoiaW1nIixzcmM6cmVxdWlyZSgiIXVybC1sb2FkZXI/bGltaXQ9MTAwMDAmbmFtZT1hc3NldHMvaW1hZ2VzL1tuYW1lXS1baGFzaF0uW2V4dF0mZmFsbGJhY2s9ZmlsZS1sb2FkZXIhLi8uLi9zdGF0aWMvaW1nLzUucG5nIikuZGVmYXVsdH0pKSxtZHgoInAiLG51bGwsbWR4KCJpbWciLHthbHQ6ImltZyIsc3JjOnJlcXVpcmUoIiF1cmwtbG9hZGVyP2xpbWl0PTEwMDAwJm5hbWU9YXNzZXRzL2ltYWdlcy9bbmFtZV0tW2hhc2hdLltleHRdJmZhbGxiYWNrPWZpbGUtbG9hZGVyIS4vLi4vc3RhdGljL2ltZy82LnBuZyIpLmRlZmF1bHR9KSksbWR4KCJwIixudWxsLGBUaGUgYmVsb3cgcGxvdCBzaG93cyB0aGUgMTAgYWN0aXZpdHkgcmVjb3JkZWQgZm9yIGEgc2luZ2xlIHN1YmplY3Qoc3ViamVjdCA3KSB3aXRoIHBob25lIGluIGhhbmQgYW5kIG5vIHN1cGVydmlzaW9uLiBUaGlzIHBsb3QgaXMgdG8gc2hvdyB0aGUgc2lnbmFsIHZhcmlhdGlvbnMgYWNyb3NzIGRpZmZlcmVudCBhY3Rpdml0aWVzLmApLG1keCgicCIsbnVsbCxtZHgoImltZyIse2FsdDoiaW1nIixzcmM6cmVxdWlyZSgiIXVybC1sb2FkZXI/bGltaXQ9MTAwMDAmbmFtZT1hc3NldHMvaW1hZ2VzL1tuYW1lXS1baGFzaF0uW2V4dF0mZmFsbGJhY2s9ZmlsZS1sb2FkZXIhLi8uLi9zdGF0aWMvaW1nLzcucG5nIikuZGVmYXVsdH0pKSk7fTtNRFhDb250ZW50LmlzTURYQ29tcG9uZW50PXRydWU7"},null]}