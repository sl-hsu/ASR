{"remainingRequest":"/Users/uma/Documents/ActivitySensing/project/asr/ASR/node_modules/babel-loader/lib/index.js??ref--11-1!/Users/uma/Documents/ActivitySensing/project/asr/ASR/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/Users/uma/Documents/ActivitySensing/project/asr/ASR/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/Users/uma/Documents/ActivitySensing/project/asr/ASR/docs/doc2.md","dependencies":[{"path":"/Users/uma/Documents/ActivitySensing/project/asr/ASR/docs/doc2.md","mtime":1607307440739},{"path":"/Users/uma/Documents/ActivitySensing/project/asr/ASR/.docusaurus/docusaurus-plugin-content-docs/default/site-docs-doc-2-md-df3.json","mtime":1607382484283},{"path":"/Users/uma/Documents/ActivitySensing/project/asr/ASR/node_modules/cache-loader/dist/cjs.js","mtime":1601567416106},{"path":"/Users/uma/Documents/ActivitySensing/project/asr/ASR/node_modules/babel-loader/lib/index.js","mtime":1606517689043},{"path":"/Users/uma/Documents/ActivitySensing/project/asr/ASR/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1606517692821},{"path":"/Users/uma/Documents/ActivitySensing/project/asr/ASR/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1606517692420}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL3VtYS9Eb2N1bWVudHMvQWN0aXZpdHlTZW5zaW5nL3Byb2plY3QvYXNyL0FTUi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyI7aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20iL1VzZXJzL3VtYS9Eb2N1bWVudHMvQWN0aXZpdHlTZW5zaW5nL3Byb2plY3QvYXNyL0FTUi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSI7aW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JztleHBvcnQgdmFyIGZyb250TWF0dGVyPXtpZDonZG9jMicsdGl0bGU6J0ludHJvZHVjdGlvbicsc2lkZWJhcl9sYWJlbDonSW50cm9kdWN0aW9uJyxjdXN0b21fZWRpdF91cmw6bnVsbCxzbHVnOicvJ307ZXhwb3J0IHZhciBtZXRhZGF0YT17InVudmVyc2lvbmVkSWQiOiJkb2MyIiwiaWQiOiJkb2MyIiwiaXNEb2NzSG9tZVBhZ2UiOmZhbHNlLCJ0aXRsZSI6IkludHJvZHVjdGlvbiIsImRlc2NyaXB0aW9uIjoiQmFja2dyb3VuZCIsInNvdXJjZSI6IkBzaXRlL2RvY3MvZG9jMi5tZCIsInNsdWciOiIvIiwicGVybWFsaW5rIjoiL0FTUi9kb2NzLyIsImVkaXRVcmwiOm51bGwsInZlcnNpb24iOiJjdXJyZW50Iiwic2lkZWJhcl9sYWJlbCI6IkludHJvZHVjdGlvbiIsInNpZGViYXIiOiJzb21lU2lkZWJhciIsIm5leHQiOnsidGl0bGUiOiJSZWxhdGVkIFdvcmsgJiBPdXIgR29hbHMiLCJwZXJtYWxpbmsiOiIvQVNSL2RvY3MvZG9jMyJ9fTsvKiBAanN4UnVudGltZSBjbGFzc2ljICovIC8qIEBqc3ggbWR4ICovZXhwb3J0IHZhciByaWdodFRvYz1be3ZhbHVlOidCYWNrZ3JvdW5kJyxpZDonYmFja2dyb3VuZCcsY2hpbGRyZW46W119LHt2YWx1ZTonTW90aXZhdGlvbicsaWQ6J21vdGl2YXRpb24nLGNoaWxkcmVuOltdfV07dmFyIGxheW91dFByb3BzPXtyaWdodFRvYzpyaWdodFRvY307dmFyIE1EWExheW91dD0id3JhcHBlciI7ZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudChfcmVmKXt2YXIgY29tcG9uZW50cz1fcmVmLmNvbXBvbmVudHMscHJvcHM9X29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3JlZixbImNvbXBvbmVudHMiXSk7cmV0dXJuIG1keChNRFhMYXlvdXQsX2V4dGVuZHMoe30sbGF5b3V0UHJvcHMscHJvcHMse2NvbXBvbmVudHM6Y29tcG9uZW50cyxtZHhUeXBlOiJNRFhMYXlvdXQifSksbWR4KCJoMyIseyJpZCI6ImJhY2tncm91bmQifSwiQmFja2dyb3VuZCIpLG1keCgicCIsbnVsbCxtZHgoInN0cm9uZyIse3BhcmVudE5hbWU6InAifSwiSHVtYW4gYWN0aXZpdHkgcmVjb2duaXRpb24iKSwiIGNhbiBwcm92aWRlIGNvbnRleHQgb24gdGhlIGluZGl2aWR1YWxcdTIwMTlzIGxpZmVzdHlsZSBhbmQgYWlkIGluIHByb3ZpZGluZyB2YWx1YWJsZSBpbmZvcm1hdGlvbiB0byB0aGUgdXNlciBvbiB0aGVpciBkYWlseSBpbnRha2Ugb2YgZm9vZCwgcGh5c2ljYWwgYWN0aXZpdHksIGFuZCBtZXRhYm9saXNtLiBJdCBiZWNvbWVzIHBhcnRpY3VsYXJseSB1c2VmdWwgZm9yIGVsZGVyY2FyZSBhbmQgaGVhbHRoIGNhcmUgYXMgYSBtb25pdG9yaW5nIHRlY2hub2xvZ3ksICBpbiBhZGRpdGlvbiB0byB0aGlzLCByZWNvZ25pemluZyB0aGUgYWN0aXZpdHkgY2FuIGhlbHAgc3lzdGVtcyB0byBnZW5lcmF0ZSBwZXJzb25hbGl6ZWQgcmVjb21tZW5kYXRpb25zIGZvciBhIHVzZXIgYW5kIGVucmljaCB0aGVpciBleHBlcmllbmNlLiAiLG1keCgic3Ryb25nIix7cGFyZW50TmFtZToicCJ9LCJTZW5zb3IgYmFzZWQgYWN0aXZpdHkgcmVjb2duaXRpb24iKSwiIGlzIHByZXZhbGVudCBhbmQgbW9iaWxlIGRldmljZXMgbGlrZSAiLG1keCgic3Ryb25nIix7cGFyZW50TmFtZToicCJ9LCJzbWFydHBob25lcyIpLCIgYXJlIG9uZSBhbW9uZyB0aGUgdWJpcXVpdG91cyB0ZWNobm9sb2d5IHRvIG1vbml0b3IgdGhlIHVzZXJcdTIwMTlzIGxpZmVzdHlsZS4gSXQgaXMgZXN0aW1hdGVkIHRoYXQgdGhlcmUgYXJlICIsbWR4KCJzdHJvbmciLHtwYXJlbnROYW1lOiJwIn0sIjUuMjMgYmlsbGlvbiIpLCIgcGVvcGxlIHRoYXQgaGF2ZSBhIG1vYmlsZSBkZXZpY2UgaW4gdGhlIHdvcmxkIGFtb3VudGluZyB0byBtb3JlIHRoYW4gIixtZHgoInN0cm9uZyIse3BhcmVudE5hbWU6InAifSwiNjYuNzklIiksIiBvZiB0aGUgd29ybGQncyBwb3B1bGF0aW9uLiBTbWFydHBob25lcyBoYXZlIGJ1aWx0LWluICIsbWR4KCJzdHJvbmciLHtwYXJlbnROYW1lOiJwIn0sImFjY2VsZXJvbWV0ZXJzIiksIiB3aGljaCBtYWtlIGl0IGNhcGFibGUgb2YgcmVjb2duaXppbmcgZGFpbHkgYWN0aXZpdGllcy4gVGhpcyBoZWxwcyB0byBnYXRoZXIgYW4gdW5kZXJzdGFuZGluZyBvZiB3aGF0IHBlb3BsZSBhcmUgZG9pbmcgYXQgYW55IG1vbWVudCBpbiB0aW1lLCBhbnRpY2lwYXRpbmcgd2hhdCB0aGV5IHdvdWxkIHByb2JhYmx5IGRvIG5leHQsIGFuZCBwcm92aWRpbmcgc2VydmljZXMgYXV0b21hdGljYWxseSBhbmQgYWNjb3JkaW5nIHRvIHRoZSBjb250ZXh0LiIpLG1keCgicCIsbnVsbCxtZHgoImltZyIse2FsdDoiaW1nIixzcmM6cmVxdWlyZSgiIXVybC1sb2FkZXI/bGltaXQ9MTAwMDAmbmFtZT1hc3NldHMvaW1hZ2VzL1tuYW1lXS1baGFzaF0uW2V4dF0mZmFsbGJhY2s9ZmlsZS1sb2FkZXIhLi8uLi9zdGF0aWMvaW1nL2ludHJvLnBuZyIpLmRlZmF1bHR9KSksbWR4KCJoMyIseyJpZCI6Im1vdGl2YXRpb24ifSwiTW90aXZhdGlvbiIpLG1keCgicCIsbnVsbCwiVGhlcmUgYXJlIHNvbWUgY2hhbGxlbmdlcyB0aGF0IGxpbWl0IHRoZSB0cmFuc2xhdGlvbiBvZiB0aGUgaWRlYSBpbnRvIGEgcHJvZHVjdCwgbGlrZSAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiaW50cmFjbGFzcyB2YXJpYWJpbGl0eSIpLCIsICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJpbnRlcmNsYXNzIHNpbWlsYXJpdHkiKSwiLCAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiY2xhc3MgaW1iYWxhbmNlIiksIiwgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sImdyb3VuZCB0cnV0aCBhbm5vdGF0aW9uIiksIi4gSW4gdGhpcyBwcm9qZWN0IHdlIHNwZWNpZmljYWxseSBmb2N1cyBvbiB0d28gb2YgdGhlc2UgbWFqb3IgY2hhbGxlbmdlcyBpbiBidWlsZGluZyBhbiBhY3Rpdml0eSByZWNvZ25pdGlvbiBtb2RlbCwgIiksbWR4KCJwIixudWxsLCJGaXJzdCB3ZSBhZGRyZXNzIHRoZSBwcm9ibGVtIG9mICIsbWR4KCJzdHJvbmciLHtwYXJlbnROYW1lOiJwIn0sImludHJhY2xhc3MgdmFyaWFiaWxpdHkiKSwiIHdoaWNoIGltcGxpZXMgdGhhdCBzYW1lIGFjdGl2aXR5IGNhbiBiZSBwZXJmb3JtZWQgZGlmZmVyZW50bHkgYnkgZGlmZmVyZW50IGluZGl2aWR1YWxzIGFuZCBldmVuIGRpZmZlcmVudGx5IGJ5IHRoZSBzYW1lIGluZGl2aWR1YWwgb3ZlciB0aW1lLiBUaGF0IG1lYW5zIHRoZSBjbGFzc2lmaWVyIG1heSBoYXZlIHBvb3IgcGVyZm9ybWFuY2Ugd2hlbiBpdCBpcyBhcHBsaWVkIHRvIHRoZSB0ZXN0IHNhbXBsZXMgZ2F0aGVyZWQgZnJvbSB0aGUgdXNlcnMgZGlmZmVyZW50IGZyb20gdGhlIHRob3NlIGluIHRyYWluaW5nLiBPbmUgc29sdXRpb24gdG8gdGhpcyBwcm9ibGVtIGlzIHRvIGNvbGxlY3QgdGhlIG5lY2Vzc2FyeSBkYXRhIGZyb20gZWFjaCB1c2VyIGJlZm9yZWhhbmQgYnV0IHRoaXMgY291bGQgYmUgdGltZS1jb25zdW1pbmcgYW5kIG5vdCBmZWFzaWJsZS4iKSxtZHgoInAiLG51bGwsIlNlY29uZCB3ZSBhZGRyZXNzIHRoZSBwcm9ibGVtIG9mICIsbWR4KCJzdHJvbmciLHtwYXJlbnROYW1lOiJwIn0sInNlbnNvciBwbGFjZW1lbnQgdmFyaWF0aW9ucyIpLCIsIGkuZSBhbiBhY3Rpdml0eSBhd2FyZSBwcm9kdWN0IHNob3VsZCBiZSBhYmxlIHRvIHJlY29nbml6ZSB0aGUgaW5kaXZpZHVhbFx1MjAxOXMgYWN0aXZpdHkgd2l0aCB2YXJpYXRpb25zIGluIHRoZSBwbGFjZW1lbnQgb2Ygc2Vuc29ycyBhcyB3ZWxsLCBzaW5jZSBtb2JpbGUgcGhvbmVzIGNhbiBiZSBmcmVlbHkgY2FycmllZCBhcm91bmQgaW5zdGVhZCBvZiBnZXR0aW5nIHN0cmFwcGVkIHRvIGEgcGFydCBvZiB0aGUgYm9keSBsaWtlIGEgc21hcnQgd2F0Y2gsIGl0IGJlY29tZXMgaW5jcmVhc2luZ2x5IGRpZmZpY3VsdCB0byBidWlsZCBhIHJlY29nbml6ZXIgdGhhdCBjYW4gYWNjb3VudCBmb3IgdGhpcyB2YXJpYXRpb24uIEhlbmNlIGFuIGFjdGl2aXR5IHJlY29nbml0aW9uIG1ldGhvZCBzaG91bGQgZnVuY3Rpb24gaW5kZXBlbmRlbnQgb2YgdGhlIHBob25lJ3MgcG9zaXRpb24gYWxvbmcgdGhlIHN1YmplY3QncyBib2R5IGFuZCBzaG91bGQgYmUgY2FwYWJsZSBvZiBwcm92aWRpbmcgaGlnaCByZWNvZ25pdGlvbiByZXN1bHRzIGV2ZW4gaW4gdGhlIGFic2VuY2Ugb2YgYWRlcXVhdGUgYW1vdW50IG9mIHRyYWluaW5nIGRhdGEgZnJvbSBkaWZmZXJlbnQgcG9zaXRpb25zLiIpLG1keCgicCIsbnVsbCwiV2UgbGV2ZXJhZ2UgYWN0aXZlIGFuZCBzZW1pLXN1cGVydmlzZWQgbGVhcm5pbmcgbWV0aG9kcyBhbmQgYWltIHRvIHNvbHZlIHRoZSBhYm92ZSB0d28gcHJvYmxlbXMgYnksICIpLG1keCgidWwiLG51bGwsbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sIkJ1aWxkaW5nIGEgcGVyc29uYWxpemVkIG1vZGVsIGZvciBhbiBpbmRpdmlkdWFsLCB0byBjb250aW51YWxseSBsZWFybiBmcm9tIHRoZSBhY3Rpdml0aWVzIG9mIHRoZSBpbmRpdmlkdWFsIG92ZXIgdGltZS4iKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSwiQWRhcHRpbmcgYSBtb2RlbCB0cmFpbmVkIG9uIGRhdGEgY29sbGVjdGVkIGZyb20gYSBpbmRpdmlkdWFsIGluIGEgcGFydGljdWxhciBzZW5zb3IgcGxhY2VtZW50IHRvIHJlY29nbml6ZSBhY3Rpdml0aWVzIHdoZW4gdGhlIHBsYWNlbWVudCBjaGFuZ2VzLiAiKSkpO307TURYQ29udGVudC5pc01EWENvbXBvbmVudD10cnVlOw=="},null]}