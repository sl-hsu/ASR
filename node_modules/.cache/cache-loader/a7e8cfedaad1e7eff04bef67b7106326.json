{"remainingRequest":"/Users/uma/Documents/ActivitySensing/project/asr/ASR/node_modules/babel-loader/lib/index.js??ref--11-1!/Users/uma/Documents/ActivitySensing/project/asr/ASR/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/Users/uma/Documents/ActivitySensing/project/asr/ASR/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/Users/uma/Documents/ActivitySensing/project/asr/ASR/docs/doc5.md","dependencies":[{"path":"/Users/uma/Documents/ActivitySensing/project/asr/ASR/docs/doc5.md","mtime":1607017615708},{"path":"/Users/uma/Documents/ActivitySensing/project/asr/ASR/.docusaurus/docusaurus-plugin-content-docs/default/site-docs-doc-5-md-c11.json","mtime":1607034908455},{"path":"/Users/uma/Documents/ActivitySensing/project/asr/ASR/node_modules/cache-loader/dist/cjs.js","mtime":1601567416106},{"path":"/Users/uma/Documents/ActivitySensing/project/asr/ASR/node_modules/babel-loader/lib/index.js","mtime":1606517689043},{"path":"/Users/uma/Documents/ActivitySensing/project/asr/ASR/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1606517692821},{"path":"/Users/uma/Documents/ActivitySensing/project/asr/ASR/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1606517692420}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL3VtYS9Eb2N1bWVudHMvQWN0aXZpdHlTZW5zaW5nL3Byb2plY3QvYXNyL0FTUi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyI7aW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JztleHBvcnQgY29uc3QgZnJvbnRNYXR0ZXI9e2lkOidkb2M1Jyx0aXRsZTonRGF0YXNldCBDb2xsZWN0aW9uJyxzaWRlYmFyX2xhYmVsOidEYXRhc2V0JyxjdXN0b21fZWRpdF91cmw6bnVsbH07ZXhwb3J0IGNvbnN0IG1ldGFkYXRhPXsidW52ZXJzaW9uZWRJZCI6ImRvYzUiLCJpZCI6ImRvYzUiLCJpc0RvY3NIb21lUGFnZSI6ZmFsc2UsInRpdGxlIjoiRGF0YXNldCBDb2xsZWN0aW9uIiwiZGVzY3JpcHRpb24iOiJJbiBvcmRlciB0byBvYnRhaW4gb3VyIGRhdGEgdG8gYWNjb21wbGlzaCB0aGUgdHdvIGdvYWxzLCB3ZSBmb2xsb3dlZCBhIHNlcmllcyBvZiBzdGVwcyB0byBjb2xsZWN0IGRhdGEgZnJvbSA3IHBhcnRpY2lwYW50cy4gT3VyIGRhdGEgY29sbGVjdGlvbiBwaXBlbGluZSBpcyBhcyBmb2xsb3dzIDoiLCJzb3VyY2UiOiJAc2l0ZS9kb2NzL2RvYzUubWQiLCJzbHVnIjoiL2RvYzUiLCJwZXJtYWxpbmsiOiIvQVNSL2RvY3MvZG9jNSIsImVkaXRVcmwiOm51bGwsInZlcnNpb24iOiJjdXJyZW50Iiwic2lkZWJhcl9sYWJlbCI6IkRhdGFzZXQiLCJzaWRlYmFyIjoic29tZVNpZGViYXIiLCJwcmV2aW91cyI6eyJ0aXRsZSI6IkdvYWxzIiwicGVybWFsaW5rIjoiL0FTUi9kb2NzL2RvYzQifSwibmV4dCI6eyJ0aXRsZSI6IkFjdGl2aXR5IEV4cGxvcmF0aW9uIiwicGVybWFsaW5rIjoiL0FTUi9kb2NzL2RvYzYifX07LyogQGpzeFJ1bnRpbWUgY2xhc3NpYyAqLyAvKiBAanN4IG1keCAqL2V4cG9ydCBjb25zdCByaWdodFRvYz1bXTtjb25zdCBsYXlvdXRQcm9wcz17cmlnaHRUb2N9O2NvbnN0IE1EWExheW91dD0id3JhcHBlciI7ZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudCh7Y29tcG9uZW50cywuLi5wcm9wc30pe3JldHVybiBtZHgoTURYTGF5b3V0LF9leHRlbmRzKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgicCIsbnVsbCxgSW4gb3JkZXIgdG8gb2J0YWluIG91ciBkYXRhIHRvIGFjY29tcGxpc2ggdGhlIHR3byBnb2Fscywgd2UgZm9sbG93ZWQgYSBzZXJpZXMgb2Ygc3RlcHMgdG8gY29sbGVjdCBkYXRhIGZyb20gNyBwYXJ0aWNpcGFudHMuIE91ciBkYXRhIGNvbGxlY3Rpb24gcGlwZWxpbmUgaXMgYXMgZm9sbG93cyA6YCksbWR4KCJvbCIsbnVsbCxtZHgoImxpIix7cGFyZW50TmFtZToib2wifSxgV2UgaW5pdGlhbGx5IGNvbW11bmljYXRlZCB0aGUgcHJvamVjdCdzIGdvYWwgdG8gdGhlIHBhcnRpY2lwYW50cyBhbmQgb2J0YWluZWQgY29uc2VudCBmcm9tIHRoZW0gdG8gcmVjb3JkIGRhdGEuIGApLG1keCgibGkiLHtwYXJlbnROYW1lOiJvbCJ9LGBXZSBjb21wbGV0ZWx5IGFub255bWlzZWQgdGhlIGRhdGFzZXQgYnkgbm90IHJlY29yZGluZyB0aGVpciBuYW1lcywgYW5kIGRlLWlkZW50aWZ5aW5nIGVhY2ggcGFydGljaXBhbnQgYXMgU3ViamVjdCAxIHRocm91Z2ggNy5gKSxtZHgoImxpIix7cGFyZW50TmFtZToib2wifSxgV2UgdXNlZCBhbmRyb2lkIHBob25lcyB0byBjb2xsZWN0IGRhdGEgZnJvbSA2IHBhcnRpY2lwYW50cyBhbmQgYW4gaXBob25lIHRvIHJlY29yZCB0aGUgcmVtYWluaW5nIDEgcGFydGljaXBhbnRzIGRhdGEuYCksbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sYFRoZSBwYXJ0aWNpcGFudHMgd2VyZSBhc2tlZCB0byBwZXJmb3JtIHRoZSBmb2xsb3dpbmcgYWN0aXZpdGllcyBhbmQgZGF0YSBjb2xsZWN0aW9uIHdhcyBkb25lIGZvciB0d28gZGlmZmVyZW50IHNlbnNvciBwb3NpdGlvbnMsIGZpcnN0IHRoZSBtb2JpbGUgcGhvbmUgd2FzIHBsYWNlZCBpbiB0aGUgaGFuZCBhbmQgc2Vjb25kIHRoZSBtb2JpbGUgcGhvbmUgd2FzIGluIHRoZSBwb2NrZXQgd2hlbiB0aGUgYWN0aXZpdHkgd2FzIHBlcmZvcm1lZC4gYCkpLG1keCgicCIsbnVsbCxtZHgoInN0cm9uZyIse3BhcmVudE5hbWU6InAifSxgQWN0aXZpdGllcyBwZXJmb3JtZWRgKSxgIDogV2Fsa2luZywgSm9nZ2luZywgQ2xpbWJpbmcgc3RhaXJzICwgQ2xpbWJpbmcgZG93bnN0YWlycywgU2l0dGluZywgTHlpbmcgZG93bi9TbGVlcGluZywgRWF0aW5nLCBEcmlua2luZywgSnVtcGluZywgRXhlcmNpc2UuYCksbWR4KCJoNCIseyJpZCI6Im5vdGUifSxgTm90ZTpgKSxtZHgoInVsIixudWxsLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LG1keCgicCIse3BhcmVudE5hbWU6ImxpIn0sYEVhdGluZyBhbmQgRHJpbmtpbmcgYWN0aXZpdHkgd2VyZSByZWNvcmRlZCBvbmx5IGZvciBzaW5nbGUgc2Vuc29yIHBsYWNlbWVudCBpLmUgdGllZCB0byB0aGUgaGFuZC4gU2luY2UgcmVjb3JkaW5nIGVhdGluZyBhY3Rpdml0eSB3aXRoIGEgcGhvbmUgaW4gdGhlIHBvY2tldCBpcyBzaW1pbGFyIHRvIHNpdHRpbmcgaWRseSBhbmQgZG9lcyBub3QgbWFrZSBzZW5zZSB0byBjb2xsZWN0LiBgKSksbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sbWR4KCJwIix7cGFyZW50TmFtZToibGkifSxgRm9yIGV4ZXJjaXNlLCB0aGUgcGFydGljaXBhbnRzIHdlcmUgYXNrZWQgdG8gZG8gYW55IHdhcm0gdXAgZXhlcmNpc2UgZXhjbHVkaW5nIHdhbGtpbmcgYW5kIHJ1bm5pbmcsIGhlbmNlIG1vc3QgcGFydGljaXBhbnRzIHJlc29ydGVkIHRvIGRvaW5nIHNpbXBsZSBzdHJldGNoZXMuYCkpKSxtZHgoIm9sIix7InN0YXJ0Ijo1fSxtZHgoImxpIix7cGFyZW50TmFtZToib2wifSxgRWFjaCBwYXJ0aWNpcGFudCByZWNvcmRlZCB0aGUgZGF0YSBvZiBlYWNoIGFjdGl2aXR5IGZvciB0aHJlZSBtaW51dGVzIHdpdGggYSBzYW1wbGluZyBmcmVxdWVuY3kgb2YgMTAwSHouIGApLG1keCgibGkiLHtwYXJlbnROYW1lOiJvbCJ9LGBBbGwgdGhlIHBhcnRpY2lwYW50cyBkYXRhIHdhcyBjb2xsZWN0ZWQgYW5kIHN0b3JlZCBpbiBhIHNoYXJlZCBkcml2ZSBhbW9uZyBib3RoIG9mIHRoZSB0ZWFtIG1lbWJlcnMgb2YgdGhlIHByb2plY3QuYCksbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sYFdlIHdpbGwgYmUgcmVmZXJyaW5nIHRvIHRoZSB0d28gc2Vuc29yIHBsYWNlbWVudCBkYXRhIGFzIOKAnGhhbmQgZGF0YeKAnSBhbmQg4oCccG9ja2V0IGRhdGHigJ0gaW4gdGhlIHN1YnNlcXVlbnQgc2VjdGlvbnMuIFRoaXMgaW1wbGllcyB0aGF0IHRoZSBkYXRhIHdhcyBjb2xsZWN0ZWQgYnkgaG9sZGluZyB0aGUgcGhvbmUgaW4gaGFuZCBhbmQgcG9ja2V0IHJlc3BlY3RpdmVseS5gKSksbWR4KCJwIixudWxsLGBBZGRpdGlvbmFsIGluZm9ybWF0aW9uIG9uIGRhdGEgY29sbGVjdGVkIDogYCksbWR4KCJwIixudWxsLGBQbG90IDEgc2hvd3MgdGhlIGhpc3RvZ3JhbSBvZiB0aGUgYWdlIGRpc3RyaWJ1dGlvbiBvZiBwYXJ0aWNpcGFudHMgYW5kIHRoZSBvdmVyYWxsIGFnZSBzcGFubmVkIGZyb20gMjMtMzEuYCksbWR4KCJwIixudWxsLG1keCgiaW1nIix7YWx0OiJpbWciLHNyYzpyZXF1aXJlKCIhdXJsLWxvYWRlcj9saW1pdD0xMDAwMCZuYW1lPWFzc2V0cy9pbWFnZXMvW25hbWVdLVtoYXNoXS5bZXh0XSZmYWxsYmFjaz1maWxlLWxvYWRlciEuLy4uL3N0YXRpYy9pbWcvYWdlLnBuZyIpLmRlZmF1bHR9KSksbWR4KCJwIixudWxsLGBQbG90IDIgc2hvd3MgdGhlIGdlbmRlciBkaXN0cmlidXRpb24gb2YgdGhlIHBhcnRpY2lwYW50cywgaW4gdG90YWwgd2UgY29sbGVjdGVkIGRhdGEgZnJvbSA0IGZlbWFsZSBhbmQgMyBtYWxlIHBhcnRpY2lwYW50cy5gKSxtZHgoInAiLG51bGwsbWR4KCJpbWciLHthbHQ6ImltZyIsc3JjOnJlcXVpcmUoIiF1cmwtbG9hZGVyP2xpbWl0PTEwMDAwJm5hbWU9YXNzZXRzL2ltYWdlcy9bbmFtZV0tW2hhc2hdLltleHRdJmZhbGxiYWNrPWZpbGUtbG9hZGVyIS4vLi4vc3RhdGljL2ltZy9nZW5kZXIucG5nIikuZGVmYXVsdH0pKSxtZHgoInAiLG51bGwsYFBsb3QgMyBzaG93cyBob3cgbWFueSBwYXJ0aWNpcGFudHMgd2VyZSB1bmRlciB0aGUgc3VwZXJ2aXNpb24gb2YgZWl0aGVyIG9uZSBvZiB0aGUgcHJvamVjdCB0ZWFtIG1lbWJlcnMgd2hpbGUgcmVjb3JkaW5nIHRoZSBkYXRhLiBJbiBvdGhlciB3b3JkcyA1IG9mIHRoZW0gY2FuIGJlIGNvbnNpZGVyZWQgdG8gYmUgc3VwZXJ2aXNlZCBhbmQgdGhlIHR3byBvdGhlciBwYXJ0aWNpcGFudHMgd2VyZSBhc2tlZCB0byByZWNvcmQgdGhlIGRhdGEgYnkgdGhlbXNlbHZlcyB3aXRob3V0IGFueSBzdXBlcnZpc2lvbi5gKSxtZHgoInAiLG51bGwsbWR4KCJpbWciLHthbHQ6ImltZyIsc3JjOnJlcXVpcmUoIiF1cmwtbG9hZGVyP2xpbWl0PTEwMDAwJm5hbWU9YXNzZXRzL2ltYWdlcy9bbmFtZV0tW2hhc2hdLltleHRdJmZhbGxiYWNrPWZpbGUtbG9hZGVyIS4vLi4vc3RhdGljL2ltZy9zdXByLnBuZyIpLmRlZmF1bHR9KSkpO307TURYQ29udGVudC5pc01EWENvbXBvbmVudD10cnVlOw=="},null]}